/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.16).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import java.util.Map;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2021-07-16T16:17:12.505207900+05:30[Asia/Calcutta]")
@Api(value = "BasicErrorController", description = "the BasicErrorController API")
public interface BasicErrorControllerApi {

    @ApiOperation(value = "error", nickname = "errorUsingDELETE", notes = "", response = Object.class, responseContainer = "Map", tags={ "basic-error-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Map.class, responseContainer = "Map"),
        @ApiResponse(code = 204, message = "No Content"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden") })
    @RequestMapping(value = "/error",
        produces = "*/*", 
        method = RequestMethod.DELETE)
    ResponseEntity<Map<String, Object>> errorUsingDELETE();


    @ApiOperation(value = "error", nickname = "errorUsingGET", notes = "", response = Object.class, responseContainer = "Map", tags={ "basic-error-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Map.class, responseContainer = "Map"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/error",
        produces = "*/*", 
        method = RequestMethod.GET)
    ResponseEntity<Map<String, Object>> errorUsingGET();


    @ApiOperation(value = "error", nickname = "errorUsingHEAD", notes = "", response = Object.class, responseContainer = "Map", tags={ "basic-error-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Map.class, responseContainer = "Map"),
        @ApiResponse(code = 204, message = "No Content"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden") })
    @RequestMapping(value = "/error",
        produces = "*/*", 
        method = RequestMethod.HEAD)
    ResponseEntity<Map<String, Object>> errorUsingHEAD();


    @ApiOperation(value = "error", nickname = "errorUsingOPTIONS", notes = "", response = Object.class, responseContainer = "Map", tags={ "basic-error-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Map.class, responseContainer = "Map"),
        @ApiResponse(code = 204, message = "No Content"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden") })
    @RequestMapping(value = "/error",
        produces = "*/*", 
        method = RequestMethod.OPTIONS)
    ResponseEntity<Map<String, Object>> errorUsingOPTIONS();


    @ApiOperation(value = "error", nickname = "errorUsingPATCH", notes = "", response = Object.class, responseContainer = "Map", tags={ "basic-error-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Map.class, responseContainer = "Map"),
        @ApiResponse(code = 204, message = "No Content"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden") })
    @RequestMapping(value = "/error",
        produces = "*/*", 
        method = RequestMethod.PATCH)
    ResponseEntity<Map<String, Object>> errorUsingPATCH();


    @ApiOperation(value = "error", nickname = "errorUsingPOST", notes = "", response = Object.class, responseContainer = "Map", tags={ "basic-error-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Map.class, responseContainer = "Map"),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/error",
        produces = "*/*", 
        method = RequestMethod.POST)
    ResponseEntity<Map<String, Object>> errorUsingPOST();


    @ApiOperation(value = "error", nickname = "errorUsingPUT", notes = "", response = Object.class, responseContainer = "Map", tags={ "basic-error-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Map.class, responseContainer = "Map"),
        @ApiResponse(code = 201, message = "Created"),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/error",
        produces = "*/*", 
        method = RequestMethod.PUT)
    ResponseEntity<Map<String, Object>> errorUsingPUT();

}
